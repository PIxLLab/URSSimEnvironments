// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "state.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace urs_wearable_pb {

namespace {

const ::google::protobuf::Descriptor* State_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  State_reflection_ = NULL;
const ::google::protobuf::Descriptor* State_Oneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  State_Oneof_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_state_2eproto() {
  protobuf_AddDesc_state_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "state.proto");
  GOOGLE_CHECK(file != NULL);
  State_descriptor_ = file->message_type(0);
  static const int State_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, oneof_),
  };
  State_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      State_descriptor_,
      State::default_instance_,
      State_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(State));
  State_Oneof_descriptor_ = State_descriptor_->nested_type(0);
  static const int State_Oneof_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State_Oneof, at_),
  };
  State_Oneof_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      State_Oneof_descriptor_,
      State_Oneof::default_instance_,
      State_Oneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State_Oneof, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State_Oneof, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(State_Oneof));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_state_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    State_descriptor_, &State::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    State_Oneof_descriptor_, &State_Oneof::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_state_2eproto() {
  delete State::default_instance_;
  delete State_reflection_;
  delete State_Oneof::default_instance_;
  delete State_Oneof_reflection_;
}

void protobuf_AddDesc_state_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::urs_wearable_pb::protobuf_AddDesc_predicate_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013state.proto\022\017urs_wearable_pb\032\017predicat"
    "e.proto\"\177\n\005State\022\037\n\002at\030\001 \003(\0132\023.urs_weara"
    "ble_pb.At\022+\n\005oneof\030\002 \003(\0132\034.urs_wearable_"
    "pb.State.Oneof\032(\n\005Oneof\022\037\n\002at\030\001 \003(\0132\023.ur"
    "s_wearable_pb.At", 176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "state.proto", &protobuf_RegisterTypes);
  State::default_instance_ = new State();
  State_Oneof::default_instance_ = new State_Oneof();
  State::default_instance_->InitAsDefaultInstance();
  State_Oneof::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_state_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_state_2eproto {
  StaticDescriptorInitializer_state_2eproto() {
    protobuf_AddDesc_state_2eproto();
  }
} static_descriptor_initializer_state_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int State_Oneof::kAtFieldNumber;
#endif  // !_MSC_VER

State_Oneof::State_Oneof()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:urs_wearable_pb.State.Oneof)
}

void State_Oneof::InitAsDefaultInstance() {
}

State_Oneof::State_Oneof(const State_Oneof& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:urs_wearable_pb.State.Oneof)
}

void State_Oneof::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

State_Oneof::~State_Oneof() {
  // @@protoc_insertion_point(destructor:urs_wearable_pb.State.Oneof)
  SharedDtor();
}

void State_Oneof::SharedDtor() {
  if (this != default_instance_) {
  }
}

void State_Oneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State_Oneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_Oneof_descriptor_;
}

const State_Oneof& State_Oneof::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_state_2eproto();
  return *default_instance_;
}

State_Oneof* State_Oneof::default_instance_ = NULL;

State_Oneof* State_Oneof::New() const {
  return new State_Oneof;
}

void State_Oneof::Clear() {
  at_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool State_Oneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:urs_wearable_pb.State.Oneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .urs_wearable_pb.At at = 1;
      case 1: {
        if (tag == 10) {
         parse_at:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_at()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_at;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:urs_wearable_pb.State.Oneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:urs_wearable_pb.State.Oneof)
  return false;
#undef DO_
}

void State_Oneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:urs_wearable_pb.State.Oneof)
  // repeated .urs_wearable_pb.At at = 1;
  for (int i = 0; i < this->at_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->at(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:urs_wearable_pb.State.Oneof)
}

::google::protobuf::uint8* State_Oneof::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:urs_wearable_pb.State.Oneof)
  // repeated .urs_wearable_pb.At at = 1;
  for (int i = 0; i < this->at_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->at(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:urs_wearable_pb.State.Oneof)
  return target;
}

int State_Oneof::ByteSize() const {
  int total_size = 0;

  // repeated .urs_wearable_pb.At at = 1;
  total_size += 1 * this->at_size();
  for (int i = 0; i < this->at_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->at(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State_Oneof::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const State_Oneof* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const State_Oneof*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void State_Oneof::MergeFrom(const State_Oneof& from) {
  GOOGLE_CHECK_NE(&from, this);
  at_.MergeFrom(from.at_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void State_Oneof::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State_Oneof::CopyFrom(const State_Oneof& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State_Oneof::IsInitialized() const {

  return true;
}

void State_Oneof::Swap(State_Oneof* other) {
  if (other != this) {
    at_.Swap(&other->at_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata State_Oneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = State_Oneof_descriptor_;
  metadata.reflection = State_Oneof_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int State::kAtFieldNumber;
const int State::kOneofFieldNumber;
#endif  // !_MSC_VER

State::State()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:urs_wearable_pb.State)
}

void State::InitAsDefaultInstance() {
}

State::State(const State& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:urs_wearable_pb.State)
}

void State::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

State::~State() {
  // @@protoc_insertion_point(destructor:urs_wearable_pb.State)
  SharedDtor();
}

void State::SharedDtor() {
  if (this != default_instance_) {
  }
}

void State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_descriptor_;
}

const State& State::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_state_2eproto();
  return *default_instance_;
}

State* State::default_instance_ = NULL;

State* State::New() const {
  return new State;
}

void State::Clear() {
  at_.Clear();
  oneof_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:urs_wearable_pb.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .urs_wearable_pb.At at = 1;
      case 1: {
        if (tag == 10) {
         parse_at:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_at()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_at;
        if (input->ExpectTag(18)) goto parse_oneof;
        break;
      }

      // repeated .urs_wearable_pb.State.Oneof oneof = 2;
      case 2: {
        if (tag == 18) {
         parse_oneof:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_oneof()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_oneof;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:urs_wearable_pb.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:urs_wearable_pb.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:urs_wearable_pb.State)
  // repeated .urs_wearable_pb.At at = 1;
  for (int i = 0; i < this->at_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->at(i), output);
  }

  // repeated .urs_wearable_pb.State.Oneof oneof = 2;
  for (int i = 0; i < this->oneof_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->oneof(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:urs_wearable_pb.State)
}

::google::protobuf::uint8* State::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:urs_wearable_pb.State)
  // repeated .urs_wearable_pb.At at = 1;
  for (int i = 0; i < this->at_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->at(i), target);
  }

  // repeated .urs_wearable_pb.State.Oneof oneof = 2;
  for (int i = 0; i < this->oneof_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->oneof(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:urs_wearable_pb.State)
  return target;
}

int State::ByteSize() const {
  int total_size = 0;

  // repeated .urs_wearable_pb.At at = 1;
  total_size += 1 * this->at_size();
  for (int i = 0; i < this->at_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->at(i));
  }

  // repeated .urs_wearable_pb.State.Oneof oneof = 2;
  total_size += 1 * this->oneof_size();
  for (int i = 0; i < this->oneof_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->oneof(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const State* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const State*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
  GOOGLE_CHECK_NE(&from, this);
  at_.MergeFrom(from.at_);
  oneof_.MergeFrom(from.oneof_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {

  return true;
}

void State::Swap(State* other) {
  if (other != this) {
    at_.Swap(&other->at_);
    oneof_.Swap(&other->oneof_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = State_descriptor_;
  metadata.reflection = State_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace urs_wearable_pb

// @@protoc_insertion_point(global_scope)
