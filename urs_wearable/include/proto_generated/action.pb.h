// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#ifndef PROTOBUF_action_2eproto__INCLUDED
#define PROTOBUF_action_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace urs_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_action_2eproto();
void protobuf_AssignDesc_action_2eproto();
void protobuf_ShutdownFile_action_2eproto();

class Action;

enum Action_ActionType {
  Action_ActionType_GOTO = 0,
  Action_ActionType_MOVE = 1
};
bool Action_ActionType_IsValid(int value);
const Action_ActionType Action_ActionType_ActionType_MIN = Action_ActionType_GOTO;
const Action_ActionType Action_ActionType_ActionType_MAX = Action_ActionType_MOVE;
const int Action_ActionType_ActionType_ARRAYSIZE = Action_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_ActionType_descriptor();
inline const ::std::string& Action_ActionType_Name(Action_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_ActionType_descriptor(), value);
}
inline bool Action_ActionType_Parse(
    const ::std::string& name, Action_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_ActionType>(
    Action_ActionType_descriptor(), name, value);
}
// ===================================================================

class Action : public ::google::protobuf::Message {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Action_ActionType ActionType;
  static const ActionType GOTO = Action_ActionType_GOTO;
  static const ActionType MOVE = Action_ActionType_MOVE;
  static inline bool ActionType_IsValid(int value) {
    return Action_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    Action_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    Action_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    Action_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return Action_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return Action_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return Action_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .urs_protobuf.Action.ActionType action_type = 1;
  inline bool has_action_type() const;
  inline void clear_action_type();
  static const int kActionTypeFieldNumber = 1;
  inline ::urs_protobuf::Action_ActionType action_type() const;
  inline void set_action_type(::urs_protobuf::Action_ActionType value);

  // optional int32 uav_id = 2;
  inline bool has_uav_id() const;
  inline void clear_uav_id();
  static const int kUavIdFieldNumber = 2;
  inline ::google::protobuf::int32 uav_id() const;
  inline void set_uav_id(::google::protobuf::int32 value);

  // optional int32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 z = 5;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 5;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // optional int32 yaw = 6;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 6;
  inline ::google::protobuf::int32 yaw() const;
  inline void set_yaw(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:urs_protobuf.Action)
 private:
  inline void set_has_action_type();
  inline void clear_has_action_type();
  inline void set_has_uav_id();
  inline void clear_has_uav_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_yaw();
  inline void clear_has_yaw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int action_type_;
  ::google::protobuf::int32 uav_id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 yaw_;
  friend void  protobuf_AddDesc_action_2eproto();
  friend void protobuf_AssignDesc_action_2eproto();
  friend void protobuf_ShutdownFile_action_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// ===================================================================


// ===================================================================

// Action

// required .urs_protobuf.Action.ActionType action_type = 1;
inline bool Action::has_action_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action::set_has_action_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action::clear_action_type() {
  action_type_ = 0;
  clear_has_action_type();
}
inline ::urs_protobuf::Action_ActionType Action::action_type() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.action_type)
  return static_cast< ::urs_protobuf::Action_ActionType >(action_type_);
}
inline void Action::set_action_type(::urs_protobuf::Action_ActionType value) {
  assert(::urs_protobuf::Action_ActionType_IsValid(value));
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.action_type)
}

// optional int32 uav_id = 2;
inline bool Action::has_uav_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Action::set_has_uav_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Action::clear_has_uav_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Action::clear_uav_id() {
  uav_id_ = 0;
  clear_has_uav_id();
}
inline ::google::protobuf::int32 Action::uav_id() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.uav_id)
  return uav_id_;
}
inline void Action::set_uav_id(::google::protobuf::int32 value) {
  set_has_uav_id();
  uav_id_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.uav_id)
}

// optional int32 x = 3;
inline bool Action::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Action::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Action::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Action::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Action::x() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.x)
  return x_;
}
inline void Action::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.x)
}

// optional int32 y = 4;
inline bool Action::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Action::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Action::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Action::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Action::y() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.y)
  return y_;
}
inline void Action::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.y)
}

// optional int32 z = 5;
inline bool Action::has_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Action::set_has_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Action::clear_has_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Action::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Action::z() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.z)
  return z_;
}
inline void Action::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.z)
}

// optional int32 yaw = 6;
inline bool Action::has_yaw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Action::set_has_yaw() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Action::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Action::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline ::google::protobuf::int32 Action::yaw() const {
  // @@protoc_insertion_point(field_get:urs_protobuf.Action.yaw)
  return yaw_;
}
inline void Action::set_yaw(::google::protobuf::int32 value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:urs_protobuf.Action.yaw)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace urs_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::urs_protobuf::Action_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::urs_protobuf::Action_ActionType>() {
  return ::urs_protobuf::Action_ActionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_action_2eproto__INCLUDED
