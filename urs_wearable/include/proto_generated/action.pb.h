// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#ifndef PROTOBUF_action_2eproto__INCLUDED
#define PROTOBUF_action_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb_urs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_action_2eproto();
void protobuf_AssignDesc_action_2eproto();
void protobuf_ShutdownFile_action_2eproto();

class Action;
class Goto;

enum Action_ActionType {
  Action_ActionType_GOTO = 0
};
bool Action_ActionType_IsValid(int value);
const Action_ActionType Action_ActionType_ActionType_MIN = Action_ActionType_GOTO;
const Action_ActionType Action_ActionType_ActionType_MAX = Action_ActionType_GOTO;
const int Action_ActionType_ActionType_ARRAYSIZE = Action_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_ActionType_descriptor();
inline const ::std::string& Action_ActionType_Name(Action_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_ActionType_descriptor(), value);
}
inline bool Action_ActionType_Parse(
    const ::std::string& name, Action_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_ActionType>(
    Action_ActionType_descriptor(), name, value);
}
// ===================================================================

class Action : public ::google::protobuf::Message {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  enum OneofActionCase {
    kGoto = 2,
    ONEOF_ACTION_NOT_SET = 0,
  };

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Action_ActionType ActionType;
  static const ActionType GOTO = Action_ActionType_GOTO;
  static inline bool ActionType_IsValid(int value) {
    return Action_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    Action_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    Action_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    Action_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return Action_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return Action_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return Action_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .pb_urs.Action.ActionType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::pb_urs::Action_ActionType type() const;
  inline void set_type(::pb_urs::Action_ActionType value);

  // optional .pb_urs.Goto goto = 2;
  inline bool has_goto_() const;
  inline void clear_goto_();
  static const int kGotoFieldNumber = 2;
  inline const ::pb_urs::Goto& goto_() const;
  inline ::pb_urs::Goto* mutable_goto_();
  inline ::pb_urs::Goto* release_goto_();
  inline void set_allocated_goto_(::pb_urs::Goto* goto_);

  inline OneofActionCase oneof_action_case() const;
  // @@protoc_insertion_point(class_scope:pb_urs.Action)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_goto_();

  inline bool has_oneof_action();
  void clear_oneof_action();
  inline void clear_has_oneof_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  union OneofActionUnion {
    ::pb_urs::Goto* goto__;
  } oneof_action_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_action_2eproto();
  friend void protobuf_AssignDesc_action_2eproto();
  friend void protobuf_ShutdownFile_action_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class Goto : public ::google::protobuf::Message {
 public:
  Goto();
  virtual ~Goto();

  Goto(const Goto& from);

  inline Goto& operator=(const Goto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Goto& default_instance();

  void Swap(Goto* other);

  // implements Message ----------------------------------------------

  Goto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Goto& from);
  void MergeFrom(const Goto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uav_id = 1;
  inline bool has_uav_id() const;
  inline void clear_uav_id();
  static const int kUavIdFieldNumber = 1;
  inline ::google::protobuf::int32 uav_id() const;
  inline void set_uav_id(::google::protobuf::int32 value);

  // optional double x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline double x() const;
  inline void set_x(double value);

  // optional double y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline double y() const;
  inline void set_y(double value);

  // optional double z = 4;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 4;
  inline double z() const;
  inline void set_z(double value);

  // optional double yaw = 5;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 5;
  inline double yaw() const;
  inline void set_yaw(double value);

  // @@protoc_insertion_point(class_scope:pb_urs.Goto)
 private:
  inline void set_has_uav_id();
  inline void clear_has_uav_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_yaw();
  inline void clear_has_yaw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  double yaw_;
  ::google::protobuf::int32 uav_id_;
  friend void  protobuf_AddDesc_action_2eproto();
  friend void protobuf_AssignDesc_action_2eproto();
  friend void protobuf_ShutdownFile_action_2eproto();

  void InitAsDefaultInstance();
  static Goto* default_instance_;
};
// ===================================================================


// ===================================================================

// Action

// required .pb_urs.Action.ActionType type = 1;
inline bool Action::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::pb_urs::Action_ActionType Action::type() const {
  // @@protoc_insertion_point(field_get:pb_urs.Action.type)
  return static_cast< ::pb_urs::Action_ActionType >(type_);
}
inline void Action::set_type(::pb_urs::Action_ActionType value) {
  assert(::pb_urs::Action_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Action.type)
}

// optional .pb_urs.Goto goto = 2;
inline bool Action::has_goto_() const {
  return oneof_action_case() == kGoto;
}
inline void Action::set_has_goto_() {
  _oneof_case_[0] = kGoto;
}
inline void Action::clear_goto_() {
  if (has_goto_()) {
    delete oneof_action_.goto__;
    clear_has_oneof_action();
  }
}
inline const ::pb_urs::Goto& Action::goto_() const {
  return has_goto_() ? *oneof_action_.goto__
                      : ::pb_urs::Goto::default_instance();
}
inline ::pb_urs::Goto* Action::mutable_goto_() {
  if (!has_goto_()) {
    clear_oneof_action();
    set_has_goto_();
    oneof_action_.goto__ = new ::pb_urs::Goto;
  }
  return oneof_action_.goto__;
}
inline ::pb_urs::Goto* Action::release_goto_() {
  if (has_goto_()) {
    clear_has_oneof_action();
    ::pb_urs::Goto* temp = oneof_action_.goto__;
    oneof_action_.goto__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Action::set_allocated_goto_(::pb_urs::Goto* goto_) {
  clear_oneof_action();
  if (goto_) {
    set_has_goto_();
    oneof_action_.goto__ = goto_;
  }
}

inline bool Action::has_oneof_action() {
  return oneof_action_case() != ONEOF_ACTION_NOT_SET;
}
inline void Action::clear_has_oneof_action() {
  _oneof_case_[0] = ONEOF_ACTION_NOT_SET;
}
inline Action::OneofActionCase Action::oneof_action_case() const {
  return Action::OneofActionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Goto

// optional int32 uav_id = 1;
inline bool Goto::has_uav_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Goto::set_has_uav_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Goto::clear_has_uav_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Goto::clear_uav_id() {
  uav_id_ = 0;
  clear_has_uav_id();
}
inline ::google::protobuf::int32 Goto::uav_id() const {
  // @@protoc_insertion_point(field_get:pb_urs.Goto.uav_id)
  return uav_id_;
}
inline void Goto::set_uav_id(::google::protobuf::int32 value) {
  set_has_uav_id();
  uav_id_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Goto.uav_id)
}

// optional double x = 2;
inline bool Goto::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Goto::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Goto::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Goto::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Goto::x() const {
  // @@protoc_insertion_point(field_get:pb_urs.Goto.x)
  return x_;
}
inline void Goto::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Goto.x)
}

// optional double y = 3;
inline bool Goto::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Goto::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Goto::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Goto::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Goto::y() const {
  // @@protoc_insertion_point(field_get:pb_urs.Goto.y)
  return y_;
}
inline void Goto::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Goto.y)
}

// optional double z = 4;
inline bool Goto::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Goto::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Goto::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Goto::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double Goto::z() const {
  // @@protoc_insertion_point(field_get:pb_urs.Goto.z)
  return z_;
}
inline void Goto::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Goto.z)
}

// optional double yaw = 5;
inline bool Goto::has_yaw() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Goto::set_has_yaw() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Goto::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Goto::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline double Goto::yaw() const {
  // @@protoc_insertion_point(field_get:pb_urs.Goto.yaw)
  return yaw_;
}
inline void Goto::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:pb_urs.Goto.yaw)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb_urs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb_urs::Action_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb_urs::Action_ActionType>() {
  return ::pb_urs::Action_ActionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_action_2eproto__INCLUDED
