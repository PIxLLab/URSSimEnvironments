// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planning.proto

#ifndef PROTOBUF_planning_2eproto__INCLUDED
#define PROTOBUF_planning_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "state.pb.h"
#include "action.pb.h"
// @@protoc_insertion_point(includes)

namespace pb_urs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_planning_2eproto();
void protobuf_AssignDesc_planning_2eproto();
void protobuf_ShutdownFile_planning_2eproto();

class PlanningRequest;
class PlanningResponse;

// ===================================================================

class PlanningRequest : public ::google::protobuf::Message {
 public:
  PlanningRequest();
  virtual ~PlanningRequest();

  PlanningRequest(const PlanningRequest& from);

  inline PlanningRequest& operator=(const PlanningRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlanningRequest& default_instance();

  void Swap(PlanningRequest* other);

  // implements Message ----------------------------------------------

  PlanningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlanningRequest& from);
  void MergeFrom(const PlanningRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb_urs.State initial = 1;
  inline bool has_initial() const;
  inline void clear_initial();
  static const int kInitialFieldNumber = 1;
  inline const ::pb_urs::State& initial() const;
  inline ::pb_urs::State* mutable_initial();
  inline ::pb_urs::State* release_initial();
  inline void set_allocated_initial(::pb_urs::State* initial);

  // required .pb_urs.State goal = 2;
  inline bool has_goal() const;
  inline void clear_goal();
  static const int kGoalFieldNumber = 2;
  inline const ::pb_urs::State& goal() const;
  inline ::pb_urs::State* mutable_goal();
  inline ::pb_urs::State* release_goal();
  inline void set_allocated_goal(::pb_urs::State* goal);

  // @@protoc_insertion_point(class_scope:pb_urs.PlanningRequest)
 private:
  inline void set_has_initial();
  inline void clear_has_initial();
  inline void set_has_goal();
  inline void clear_has_goal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb_urs::State* initial_;
  ::pb_urs::State* goal_;
  friend void  protobuf_AddDesc_planning_2eproto();
  friend void protobuf_AssignDesc_planning_2eproto();
  friend void protobuf_ShutdownFile_planning_2eproto();

  void InitAsDefaultInstance();
  static PlanningRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlanningResponse : public ::google::protobuf::Message {
 public:
  PlanningResponse();
  virtual ~PlanningResponse();

  PlanningResponse(const PlanningResponse& from);

  inline PlanningResponse& operator=(const PlanningResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlanningResponse& default_instance();

  void Swap(PlanningResponse* other);

  // implements Message ----------------------------------------------

  PlanningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlanningResponse& from);
  void MergeFrom(const PlanningResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb_urs.Action actions = 1;
  inline int actions_size() const;
  inline void clear_actions();
  static const int kActionsFieldNumber = 1;
  inline const ::pb_urs::Action& actions(int index) const;
  inline ::pb_urs::Action* mutable_actions(int index);
  inline ::pb_urs::Action* add_actions();
  inline const ::google::protobuf::RepeatedPtrField< ::pb_urs::Action >&
      actions() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb_urs::Action >*
      mutable_actions();

  // @@protoc_insertion_point(class_scope:pb_urs.PlanningResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb_urs::Action > actions_;
  friend void  protobuf_AddDesc_planning_2eproto();
  friend void protobuf_AssignDesc_planning_2eproto();
  friend void protobuf_ShutdownFile_planning_2eproto();

  void InitAsDefaultInstance();
  static PlanningResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// PlanningRequest

// required .pb_urs.State initial = 1;
inline bool PlanningRequest::has_initial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlanningRequest::set_has_initial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlanningRequest::clear_has_initial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlanningRequest::clear_initial() {
  if (initial_ != NULL) initial_->::pb_urs::State::Clear();
  clear_has_initial();
}
inline const ::pb_urs::State& PlanningRequest::initial() const {
  // @@protoc_insertion_point(field_get:pb_urs.PlanningRequest.initial)
  return initial_ != NULL ? *initial_ : *default_instance_->initial_;
}
inline ::pb_urs::State* PlanningRequest::mutable_initial() {
  set_has_initial();
  if (initial_ == NULL) initial_ = new ::pb_urs::State;
  // @@protoc_insertion_point(field_mutable:pb_urs.PlanningRequest.initial)
  return initial_;
}
inline ::pb_urs::State* PlanningRequest::release_initial() {
  clear_has_initial();
  ::pb_urs::State* temp = initial_;
  initial_ = NULL;
  return temp;
}
inline void PlanningRequest::set_allocated_initial(::pb_urs::State* initial) {
  delete initial_;
  initial_ = initial;
  if (initial) {
    set_has_initial();
  } else {
    clear_has_initial();
  }
  // @@protoc_insertion_point(field_set_allocated:pb_urs.PlanningRequest.initial)
}

// required .pb_urs.State goal = 2;
inline bool PlanningRequest::has_goal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlanningRequest::set_has_goal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlanningRequest::clear_has_goal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlanningRequest::clear_goal() {
  if (goal_ != NULL) goal_->::pb_urs::State::Clear();
  clear_has_goal();
}
inline const ::pb_urs::State& PlanningRequest::goal() const {
  // @@protoc_insertion_point(field_get:pb_urs.PlanningRequest.goal)
  return goal_ != NULL ? *goal_ : *default_instance_->goal_;
}
inline ::pb_urs::State* PlanningRequest::mutable_goal() {
  set_has_goal();
  if (goal_ == NULL) goal_ = new ::pb_urs::State;
  // @@protoc_insertion_point(field_mutable:pb_urs.PlanningRequest.goal)
  return goal_;
}
inline ::pb_urs::State* PlanningRequest::release_goal() {
  clear_has_goal();
  ::pb_urs::State* temp = goal_;
  goal_ = NULL;
  return temp;
}
inline void PlanningRequest::set_allocated_goal(::pb_urs::State* goal) {
  delete goal_;
  goal_ = goal;
  if (goal) {
    set_has_goal();
  } else {
    clear_has_goal();
  }
  // @@protoc_insertion_point(field_set_allocated:pb_urs.PlanningRequest.goal)
}

// -------------------------------------------------------------------

// PlanningResponse

// repeated .pb_urs.Action actions = 1;
inline int PlanningResponse::actions_size() const {
  return actions_.size();
}
inline void PlanningResponse::clear_actions() {
  actions_.Clear();
}
inline const ::pb_urs::Action& PlanningResponse::actions(int index) const {
  // @@protoc_insertion_point(field_get:pb_urs.PlanningResponse.actions)
  return actions_.Get(index);
}
inline ::pb_urs::Action* PlanningResponse::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:pb_urs.PlanningResponse.actions)
  return actions_.Mutable(index);
}
inline ::pb_urs::Action* PlanningResponse::add_actions() {
  // @@protoc_insertion_point(field_add:pb_urs.PlanningResponse.actions)
  return actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_urs::Action >&
PlanningResponse::actions() const {
  // @@protoc_insertion_point(field_list:pb_urs.PlanningResponse.actions)
  return actions_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb_urs::Action >*
PlanningResponse::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:pb_urs.PlanningResponse.actions)
  return &actions_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb_urs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_planning_2eproto__INCLUDED
