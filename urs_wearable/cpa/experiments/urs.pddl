(define (domain urs)
  (:requirements :conditional-effects :equality :typing)
  (:types id x y z)
  (:predicates (at ?id - id ?x - x ?y - y ?z - z)
  )
  (:action goto
    :parameters (?id - id ?x0 - x ?y0 - y ?z0 - z ?x1 - x ?y1 - y ?z1 - z)
    :precondition (at ?id ?x0 ?y0 ?z0)
    :effect (and (not (at ?id ?x0 ?y0 ?z0)) (at ?id ?x1 ?y1 ?z1))
  )
)
(define (problem urs_prob)
  (:domain urs)
  (:objects id0 - id x0 - x y0 - y z1 - z x0 - x y0 - y z2 - z)
  (:init (and (at id0 x0 y0 z1) (not (at id0 x0 y0 z2))))
  (:goal (at id0 x0 y0 z2))
)
