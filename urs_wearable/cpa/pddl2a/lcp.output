Nonterminals useless in grammar

   init_el_star
   init_el
   structure_def
   structure_def_star
   variable_plus
   variable_star
   GD_star_oneof
   number


Terminals unused in grammar

   EXISTENTIAL_PRECONDITIONS
   UNIVERSAL_PRECONDITIONS
   QUANTIFIED_PRECONDITIONS
   STRUCTURE
   ATEND
   ALWAYS
   SOMETIME
   WITHIN
   AT_MOST_ONCE
   SOMETIME_AFTER
   SOMETIME_BEFORE
   ALWAYS_WITHIN
   HOLD_DURING
   HOLD_AFTER
   NUMBER
   SEMICOLON


Rules useless in grammar

  109 init_el_star: init_el
  110             | init_el_star init_el

  111 init_el: literal

  112 structure_def: action_def
  113              | derived_def

  114 structure_def_star: %empty
  115                   | structure_def_star structure_def

  116 variable_plus: variable
  117              | variable_plus variable

  118 variable_star: %empty
  119              | variable_star variable

  120 GD_star_oneof: %empty
  121              | GD_star_and GD

  122 number: NUMBER


Rules useless in parser due to conflicts

   11 problem_option: require_def


State 86 conflicts: 3 reduce/reduce
State 106 conflicts: 2 reduce/reduce
State 136 conflicts: 1 shift/reduce, 1 reduce/reduce
State 193 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce


Grammar

    0 $accept: pdomain $end

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    2 domain_option: %empty
    3              | domain_option require_def
    4              | domain_option types_def
    5              | domain_option constants_def
    6              | domain_option predicates_def
    7              | domain_option derived_def
    8              | domain_option action_def

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

   11 problem_option: require_def
   12               | object_dec
   13               | require_def object_dec

   14 object_dec: LEFT_PAREN OBJECT typed_list_object RIGHT_PAREN

   15 init: LEFT_PAREN INIT init_list RIGHT_PAREN

   16 goal: LEFT_PAREN GOAL pre_GD RIGHT_PAREN

   17 init_list: LEFT_PAREN AND pre_GD_star_and RIGHT_PAREN
   18          | LEFT_PAREN OR pre_GD_star_or RIGHT_PAREN

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN
   20           | LEFT_PAREN ACTION name action_def_body RIGHT_PAREN

   21 action_def_body: %empty
   22                | precondition_def
   23                | effect_def
   24                | precondition_def effect_def

   25 precondition_def: PRECONDITION LEFT_PAREN RIGHT_PAREN
   26                 | PRECONDITION pre_GD

   27 effect_def: EFFECT LEFT_PAREN RIGHT_PAREN
   28           | EFFECT effectlist

   29 effectlist: c_effect
   30           | LEFT_PAREN AND c_effect_star_and RIGHT_PAREN

   31 c_effect_star_and: %empty
   32                  | c_effect_star_and c_effect

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN
   34         | LEFT_PAREN WHEN GD cond_effect RIGHT_PAREN
   35         | p_effect

   36 p_effect: atomic_formula_term
   37         | LEFT_PAREN NOT atomic_formula_term RIGHT_PAREN

   38 p_effect_star_and: %empty
   39                  | p_effect_star_and p_effect

   40 cond_effect: p_effect
   41            | LEFT_PAREN AND p_effect p_effect_star_and RIGHT_PAREN

   42 derived_def: LEFT_PAREN DERIVED typed_list_variable literal GD RIGHT_PAREN

   43 pref_GD: LEFT_PAREN PREFERENCE name GD RIGHT_PAREN
   44        | GD

   45 pre_GD: pref_GD
   46       | LEFT_PAREN AND pre_GD_star_and RIGHT_PAREN
   47       | LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN

   48 pre_GD_star_and: %empty
   49                | pre_GD_star_and pre_GD

   50 pre_GD_star_or: %empty
   51               | pre_GD_star_or pre_GD

   52 predicates_def: LEFT_PAREN PREDICATES atomic_formula_skeleton_plus RIGHT_PAREN

   53 atomic_formula_skeleton_plus: atomic_formula_skeleton
   54                             | atomic_formula_skeleton_plus atomic_formula_skeleton

   55 atomic_formula_skeleton: LEFT_PAREN predicate typed_list_variable RIGHT_PAREN

   56 typed_list_variable: %empty
   57                    | variable MINUS type typed_list_variable
   58                    | variable typed_list_variable

   59 type: LEFT_PAREN EITHER primitive_type_plus RIGHT_PAREN
   60     | primitive_type

   61 primitive_type_plus: name
   62                    | primitive_type_plus name

   63 primitive_type: name

   64 constants_def: LEFT_PAREN CONSTANTS typed_list_object RIGHT_PAREN

   65 types_def: LEFT_PAREN TYPES typed_list_name RIGHT_PAREN

   66 typed_list_name: %empty
   67                | name MINUS name typed_list_name
   68                | name typed_list_name

   69 typed_list_object: %empty
   70                  | name MINUS type typed_list_object
   71                  | name typed_list_object

   72 require_def: LEFT_PAREN REQUIREMENTS require_key_plus RIGHT_PAREN

   73 require_key_plus: require_key
   74                 | require_key_plus require_key

   75 require_key: STRIPS
   76            | ADL
   77            | EQUALITY
   78            | TYPING
   79            | DISJUNCTIVE_PRECONDITIONS
   80            | NEGATIVE_PRECONDITIONS
   81            | CONDITIONAL_EFFECTS
   82            | DERIVED_PREDICATES
   83            | CONSTRAINTS

   84 GD: atomic_formula_term
   85   | literal
   86   | LEFT_PAREN AND GD_star_and RIGHT_PAREN
   87   | LEFT_PAREN OR GD_star_or RIGHT_PAREN
   88   | LEFT_PAREN NOT GD RIGHT_PAREN
   89   | LEFT_PAREN IMPLY GD GD RIGHT_PAREN
   90   | LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   91   | LEFT_PAREN EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   92   | LEFT_PAREN UNKNOWN GD_star_or RIGHT_PAREN
   93   | LEFT_PAREN ONEOF GD_star_or RIGHT_PAREN

   94 GD_star_or: %empty
   95           | GD_star_or GD

   96 GD_star_and: %empty
   97            | GD_star_and GD

   98 literal: atomic_formula_term
   99        | LEFT_PAREN NOT atomic_formula_term RIGHT_PAREN

  100 atomic_formula_term: LEFT_PAREN predicate term_star RIGHT_PAREN

  101 predicate: name
  102          | EQUAL

  103 term_star: %empty
  104          | term_star term

  105 term: name
  106     | variable

  107 name: NAME

  108 variable: VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256)
dDOMAIN (258) 1
DEFINE (259) 1 9 10
REQUIREMENTS (260) 72
STRIPS (261) 75
ADL (262) 76
TYPING (263) 78
NEGATIVE_PRECONDITIONS (264) 80
DISJUNCTIVE_PRECONDITIONS (265) 79
EQUALITY (266) 77
EXISTENTIAL_PRECONDITIONS (267)
UNIVERSAL_PRECONDITIONS (268)
QUANTIFIED_PRECONDITIONS (269)
CONDITIONAL_EFFECTS (270) 81
DERIVED_PREDICATES (271) 82
TYPES (272) 65
CONSTANTS (273) 64
PREFERENCE (274) 43
PREDICATES (275) 52
CONSTRAINTS (276) 83
STRUCTURE (277)
PROBLEM (278) 9 10
INIT (279) 15
GOAL (280) 16
OBJECT (281) 14
pDOMAIN (282) 9 10
ACTION (283) 19 20
DERIVED (284) 42
PRECONDITION (285) 25 26
EFFECT (286) 27 28
PARAMETERS (287) 19
WHEN (288) 34
AND (289) 17 30 41 46 86
OR (290) 18 87
NOT (291) 37 88 99
IMPLY (292) 89
EXISTS (293) 91
FORALL (294) 33 47 90
ATEND (295)
ALWAYS (296)
SOMETIME (297)
WITHIN (298)
AT_MOST_ONCE (299)
SOMETIME_AFTER (300)
SOMETIME_BEFORE (301)
ALWAYS_WITHIN (302)
HOLD_DURING (303)
HOLD_AFTER (304)
EITHER (305) 59
UNKNOWN (306) 92
ONEOF (307) 93
NUMBER (308)
NAME (309) 107
VARIABLE (310) 108
MINUS (311) 57 67 70
EQUAL (312) 102
LEFT_PAREN (313) 1 9 10 14 15 16 17 18 19 20 25 27 30 33 34 37 41 42
    43 46 47 52 55 59 64 65 72 86 87 88 89 90 91 92 93 99 100
RIGHT_PAREN (314) 1 9 10 14 15 16 17 18 19 20 25 27 30 33 34 37 41
    42 43 46 47 52 55 59 64 65 72 86 87 88 89 90 91 92 93 99 100
SEMICOLON (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
pdomain (62)
    on left: 1, on right: 0
domain_option (63)
    on left: 2 3 4 5 6 7 8, on right: 1 3 4 5 6 7 8
pproblem (64)
    on left: 9 10, on right: 1
problem_option (65)
    on left: 11 12 13, on right: 9
object_dec (66)
    on left: 14, on right: 12 13
init (67)
    on left: 15, on right: 9 10
goal (68)
    on left: 16, on right: 9 10
init_list (69)
    on left: 17 18, on right: 15
action_def (70)
    on left: 19 20, on right: 8
action_def_body (71)
    on left: 21 22 23 24, on right: 19 20
precondition_def (72)
    on left: 25 26, on right: 22 24
effect_def (73)
    on left: 27 28, on right: 23 24
effectlist (74)
    on left: 29 30, on right: 28 33
c_effect_star_and (75)
    on left: 31 32, on right: 30 32
c_effect (76)
    on left: 33 34 35, on right: 29 32
p_effect (77)
    on left: 36 37, on right: 35 39 40 41
p_effect_star_and (78)
    on left: 38 39, on right: 39 41
cond_effect (79)
    on left: 40 41, on right: 34
derived_def (80)
    on left: 42, on right: 7
pref_GD (81)
    on left: 43 44, on right: 45
pre_GD (82)
    on left: 45 46 47, on right: 16 26 47 49 51
pre_GD_star_and (83)
    on left: 48 49, on right: 17 46 49
pre_GD_star_or (84)
    on left: 50 51, on right: 18 51
predicates_def (85)
    on left: 52, on right: 6
atomic_formula_skeleton_plus (86)
    on left: 53 54, on right: 52 54
atomic_formula_skeleton (87)
    on left: 55, on right: 53 54
typed_list_variable (88)
    on left: 56 57 58, on right: 19 33 42 47 55 57 58 90 91
type (89)
    on left: 59 60, on right: 57 70
primitive_type_plus (90)
    on left: 61 62, on right: 59 62
primitive_type (91)
    on left: 63, on right: 60
constants_def (92)
    on left: 64, on right: 5
types_def (93)
    on left: 65, on right: 4
typed_list_name (94)
    on left: 66 67 68, on right: 65 67 68
typed_list_object (95)
    on left: 69 70 71, on right: 14 64 70 71
require_def (96)
    on left: 72, on right: 3 11 13
require_key_plus (97)
    on left: 73 74, on right: 72 74
require_key (98)
    on left: 75 76 77 78 79 80 81 82 83, on right: 73 74
GD (99)
    on left: 84 85 86 87 88 89 90 91 92 93, on right: 34 42 43 44 88
    89 90 91 95 97
GD_star_or (100)
    on left: 94 95, on right: 87 92 93 95
GD_star_and (101)
    on left: 96 97, on right: 86 97
literal (102)
    on left: 98 99, on right: 42 85
atomic_formula_term (103)
    on left: 100, on right: 36 37 84 98 99
predicate (104)
    on left: 101 102, on right: 55 100
term_star (105)
    on left: 103 104, on right: 100 104
term (106)
    on left: 105 106, on right: 104
name (107)
    on left: 107, on right: 1 9 10 19 20 43 61 62 63 67 68 70 71 101
    105
variable (108)
    on left: 108, on right: 57 58 106


State 0

    0 $accept: . pdomain $end

    LEFT_PAREN  shift, and go to state 1

    pdomain  go to state 2


State 1

    1 pdomain: LEFT_PAREN . DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    DEFINE  shift, and go to state 3


State 2

    0 $accept: pdomain . $end

    $end  shift, and go to state 4


State 3

    1 pdomain: LEFT_PAREN DEFINE . LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    LEFT_PAREN  shift, and go to state 5


State 4

    0 $accept: pdomain $end .

    $default  accept


State 5

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN . dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    dDOMAIN  shift, and go to state 6


State 6

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN . name RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    NAME  shift, and go to state 7

    name  go to state 8


State 7

  107 name: NAME .

    $default  reduce using rule 107 (name)


State 8

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name . RIGHT_PAREN domain_option RIGHT_PAREN pproblem

    RIGHT_PAREN  shift, and go to state 9


State 9

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN . domain_option RIGHT_PAREN pproblem

    $default  reduce using rule 2 (domain_option)

    domain_option  go to state 10


State 10

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option . RIGHT_PAREN pproblem
    3 domain_option: domain_option . require_def
    4              | domain_option . types_def
    5              | domain_option . constants_def
    6              | domain_option . predicates_def
    7              | domain_option . derived_def
    8              | domain_option . action_def

    LEFT_PAREN   shift, and go to state 11
    RIGHT_PAREN  shift, and go to state 12

    action_def      go to state 13
    derived_def     go to state 14
    predicates_def  go to state 15
    constants_def   go to state 16
    types_def       go to state 17
    require_def     go to state 18


State 11

   19 action_def: LEFT_PAREN . ACTION name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN
   20           | LEFT_PAREN . ACTION name action_def_body RIGHT_PAREN
   42 derived_def: LEFT_PAREN . DERIVED typed_list_variable literal GD RIGHT_PAREN
   52 predicates_def: LEFT_PAREN . PREDICATES atomic_formula_skeleton_plus RIGHT_PAREN
   64 constants_def: LEFT_PAREN . CONSTANTS typed_list_object RIGHT_PAREN
   65 types_def: LEFT_PAREN . TYPES typed_list_name RIGHT_PAREN
   72 require_def: LEFT_PAREN . REQUIREMENTS require_key_plus RIGHT_PAREN

    REQUIREMENTS  shift, and go to state 19
    TYPES         shift, and go to state 20
    CONSTANTS     shift, and go to state 21
    PREDICATES    shift, and go to state 22
    ACTION        shift, and go to state 23
    DERIVED       shift, and go to state 24


State 12

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN . pproblem

    LEFT_PAREN  shift, and go to state 25

    pproblem  go to state 26


State 13

    8 domain_option: domain_option action_def .

    $default  reduce using rule 8 (domain_option)


State 14

    7 domain_option: domain_option derived_def .

    $default  reduce using rule 7 (domain_option)


State 15

    6 domain_option: domain_option predicates_def .

    $default  reduce using rule 6 (domain_option)


State 16

    5 domain_option: domain_option constants_def .

    $default  reduce using rule 5 (domain_option)


State 17

    4 domain_option: domain_option types_def .

    $default  reduce using rule 4 (domain_option)


State 18

    3 domain_option: domain_option require_def .

    $default  reduce using rule 3 (domain_option)


State 19

   72 require_def: LEFT_PAREN REQUIREMENTS . require_key_plus RIGHT_PAREN

    STRIPS                     shift, and go to state 27
    ADL                        shift, and go to state 28
    TYPING                     shift, and go to state 29
    NEGATIVE_PRECONDITIONS     shift, and go to state 30
    DISJUNCTIVE_PRECONDITIONS  shift, and go to state 31
    EQUALITY                   shift, and go to state 32
    CONDITIONAL_EFFECTS        shift, and go to state 33
    DERIVED_PREDICATES         shift, and go to state 34
    CONSTRAINTS                shift, and go to state 35

    require_key_plus  go to state 36
    require_key       go to state 37


State 20

   65 types_def: LEFT_PAREN TYPES . typed_list_name RIGHT_PAREN

    NAME  shift, and go to state 7

    $default  reduce using rule 66 (typed_list_name)

    typed_list_name  go to state 38
    name             go to state 39


State 21

   64 constants_def: LEFT_PAREN CONSTANTS . typed_list_object RIGHT_PAREN

    NAME  shift, and go to state 7

    $default  reduce using rule 69 (typed_list_object)

    typed_list_object  go to state 40
    name               go to state 41


State 22

   52 predicates_def: LEFT_PAREN PREDICATES . atomic_formula_skeleton_plus RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 42

    atomic_formula_skeleton_plus  go to state 43
    atomic_formula_skeleton       go to state 44


State 23

   19 action_def: LEFT_PAREN ACTION . name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN
   20           | LEFT_PAREN ACTION . name action_def_body RIGHT_PAREN

    NAME  shift, and go to state 7

    name  go to state 45


State 24

   42 derived_def: LEFT_PAREN DERIVED . typed_list_variable literal GD RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 47
    variable             go to state 48


State 25

    9 pproblem: LEFT_PAREN . DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN . DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    DEFINE  shift, and go to state 49


State 26

    1 pdomain: LEFT_PAREN DEFINE LEFT_PAREN dDOMAIN name RIGHT_PAREN domain_option RIGHT_PAREN pproblem .

    $default  reduce using rule 1 (pdomain)


State 27

   75 require_key: STRIPS .

    $default  reduce using rule 75 (require_key)


State 28

   76 require_key: ADL .

    $default  reduce using rule 76 (require_key)


State 29

   78 require_key: TYPING .

    $default  reduce using rule 78 (require_key)


State 30

   80 require_key: NEGATIVE_PRECONDITIONS .

    $default  reduce using rule 80 (require_key)


State 31

   79 require_key: DISJUNCTIVE_PRECONDITIONS .

    $default  reduce using rule 79 (require_key)


State 32

   77 require_key: EQUALITY .

    $default  reduce using rule 77 (require_key)


State 33

   81 require_key: CONDITIONAL_EFFECTS .

    $default  reduce using rule 81 (require_key)


State 34

   82 require_key: DERIVED_PREDICATES .

    $default  reduce using rule 82 (require_key)


State 35

   83 require_key: CONSTRAINTS .

    $default  reduce using rule 83 (require_key)


State 36

   72 require_def: LEFT_PAREN REQUIREMENTS require_key_plus . RIGHT_PAREN
   74 require_key_plus: require_key_plus . require_key

    STRIPS                     shift, and go to state 27
    ADL                        shift, and go to state 28
    TYPING                     shift, and go to state 29
    NEGATIVE_PRECONDITIONS     shift, and go to state 30
    DISJUNCTIVE_PRECONDITIONS  shift, and go to state 31
    EQUALITY                   shift, and go to state 32
    CONDITIONAL_EFFECTS        shift, and go to state 33
    DERIVED_PREDICATES         shift, and go to state 34
    CONSTRAINTS                shift, and go to state 35
    RIGHT_PAREN                shift, and go to state 50

    require_key  go to state 51


State 37

   73 require_key_plus: require_key .

    $default  reduce using rule 73 (require_key_plus)


State 38

   65 types_def: LEFT_PAREN TYPES typed_list_name . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 52


State 39

   67 typed_list_name: name . MINUS name typed_list_name
   68                | name . typed_list_name

    NAME   shift, and go to state 7
    MINUS  shift, and go to state 53

    $default  reduce using rule 66 (typed_list_name)

    typed_list_name  go to state 54
    name             go to state 39


State 40

   64 constants_def: LEFT_PAREN CONSTANTS typed_list_object . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 55


State 41

   70 typed_list_object: name . MINUS type typed_list_object
   71                  | name . typed_list_object

    NAME   shift, and go to state 7
    MINUS  shift, and go to state 56

    $default  reduce using rule 69 (typed_list_object)

    typed_list_object  go to state 57
    name               go to state 41


State 42

   55 atomic_formula_skeleton: LEFT_PAREN . predicate typed_list_variable RIGHT_PAREN

    NAME   shift, and go to state 7
    EQUAL  shift, and go to state 58

    predicate  go to state 59
    name       go to state 60


State 43

   52 predicates_def: LEFT_PAREN PREDICATES atomic_formula_skeleton_plus . RIGHT_PAREN
   54 atomic_formula_skeleton_plus: atomic_formula_skeleton_plus . atomic_formula_skeleton

    LEFT_PAREN   shift, and go to state 42
    RIGHT_PAREN  shift, and go to state 61

    atomic_formula_skeleton  go to state 62


State 44

   53 atomic_formula_skeleton_plus: atomic_formula_skeleton .

    $default  reduce using rule 53 (atomic_formula_skeleton_plus)


State 45

   19 action_def: LEFT_PAREN ACTION name . PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN
   20           | LEFT_PAREN ACTION name . action_def_body RIGHT_PAREN

    PRECONDITION  shift, and go to state 63
    EFFECT        shift, and go to state 64
    PARAMETERS    shift, and go to state 65

    $default  reduce using rule 21 (action_def_body)

    action_def_body   go to state 66
    precondition_def  go to state 67
    effect_def        go to state 68


State 46

  108 variable: VARIABLE .

    $default  reduce using rule 108 (variable)


State 47

   42 derived_def: LEFT_PAREN DERIVED typed_list_variable . literal GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 69

    literal              go to state 70
    atomic_formula_term  go to state 71


State 48

   57 typed_list_variable: variable . MINUS type typed_list_variable
   58                    | variable . typed_list_variable

    VARIABLE  shift, and go to state 46
    MINUS     shift, and go to state 72

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 73
    variable             go to state 48


State 49

    9 pproblem: LEFT_PAREN DEFINE . LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE . LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 74


State 50

   72 require_def: LEFT_PAREN REQUIREMENTS require_key_plus RIGHT_PAREN .

    $default  reduce using rule 72 (require_def)


State 51

   74 require_key_plus: require_key_plus require_key .

    $default  reduce using rule 74 (require_key_plus)


State 52

   65 types_def: LEFT_PAREN TYPES typed_list_name RIGHT_PAREN .

    $default  reduce using rule 65 (types_def)


State 53

   67 typed_list_name: name MINUS . name typed_list_name

    NAME  shift, and go to state 7

    name  go to state 75


State 54

   68 typed_list_name: name typed_list_name .

    $default  reduce using rule 68 (typed_list_name)


State 55

   64 constants_def: LEFT_PAREN CONSTANTS typed_list_object RIGHT_PAREN .

    $default  reduce using rule 64 (constants_def)


State 56

   70 typed_list_object: name MINUS . type typed_list_object

    NAME        shift, and go to state 7
    LEFT_PAREN  shift, and go to state 76

    type            go to state 77
    primitive_type  go to state 78
    name            go to state 79


State 57

   71 typed_list_object: name typed_list_object .

    $default  reduce using rule 71 (typed_list_object)


State 58

  102 predicate: EQUAL .

    $default  reduce using rule 102 (predicate)


State 59

   55 atomic_formula_skeleton: LEFT_PAREN predicate . typed_list_variable RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 80
    variable             go to state 48


State 60

  101 predicate: name .

    $default  reduce using rule 101 (predicate)


State 61

   52 predicates_def: LEFT_PAREN PREDICATES atomic_formula_skeleton_plus RIGHT_PAREN .

    $default  reduce using rule 52 (predicates_def)


State 62

   54 atomic_formula_skeleton_plus: atomic_formula_skeleton_plus atomic_formula_skeleton .

    $default  reduce using rule 54 (atomic_formula_skeleton_plus)


State 63

   25 precondition_def: PRECONDITION . LEFT_PAREN RIGHT_PAREN
   26                 | PRECONDITION . pre_GD

    LEFT_PAREN  shift, and go to state 81

    pref_GD              go to state 82
    pre_GD               go to state 83
    GD                   go to state 84
    literal              go to state 85
    atomic_formula_term  go to state 86


State 64

   27 effect_def: EFFECT . LEFT_PAREN RIGHT_PAREN
   28           | EFFECT . effectlist

    LEFT_PAREN  shift, and go to state 87

    effectlist           go to state 88
    c_effect             go to state 89
    p_effect             go to state 90
    atomic_formula_term  go to state 91


State 65

   19 action_def: LEFT_PAREN ACTION name PARAMETERS . LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 92


State 66

   20 action_def: LEFT_PAREN ACTION name action_def_body . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 93


State 67

   22 action_def_body: precondition_def .
   24                | precondition_def . effect_def

    EFFECT  shift, and go to state 64

    $default  reduce using rule 22 (action_def_body)

    effect_def  go to state 94


State 68

   23 action_def_body: effect_def .

    $default  reduce using rule 23 (action_def_body)


State 69

   99 literal: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    NOT    shift, and go to state 95
    NAME   shift, and go to state 7
    EQUAL  shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 70

   42 derived_def: LEFT_PAREN DERIVED typed_list_variable literal . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 98
    literal              go to state 85
    atomic_formula_term  go to state 86


State 71

   98 literal: atomic_formula_term .

    $default  reduce using rule 98 (literal)


State 72

   57 typed_list_variable: variable MINUS . type typed_list_variable

    NAME        shift, and go to state 7
    LEFT_PAREN  shift, and go to state 76

    type            go to state 99
    primitive_type  go to state 78
    name            go to state 79


State 73

   58 typed_list_variable: variable typed_list_variable .

    $default  reduce using rule 58 (typed_list_variable)


State 74

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN . PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN . PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    PROBLEM  shift, and go to state 100


State 75

   67 typed_list_name: name MINUS name . typed_list_name

    NAME  shift, and go to state 7

    $default  reduce using rule 66 (typed_list_name)

    typed_list_name  go to state 101
    name             go to state 39


State 76

   59 type: LEFT_PAREN . EITHER primitive_type_plus RIGHT_PAREN

    EITHER  shift, and go to state 102


State 77

   70 typed_list_object: name MINUS type . typed_list_object

    NAME  shift, and go to state 7

    $default  reduce using rule 69 (typed_list_object)

    typed_list_object  go to state 103
    name               go to state 41


State 78

   60 type: primitive_type .

    $default  reduce using rule 60 (type)


State 79

   63 primitive_type: name .

    $default  reduce using rule 63 (primitive_type)


State 80

   55 atomic_formula_skeleton: LEFT_PAREN predicate typed_list_variable . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 104


State 81

   25 precondition_def: PRECONDITION LEFT_PAREN . RIGHT_PAREN
   43 pref_GD: LEFT_PAREN . PREFERENCE name GD RIGHT_PAREN
   46 pre_GD: LEFT_PAREN . AND pre_GD_star_and RIGHT_PAREN
   47       | LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN
   86 GD: LEFT_PAREN . AND GD_star_and RIGHT_PAREN
   87   | LEFT_PAREN . OR GD_star_or RIGHT_PAREN
   88   | LEFT_PAREN . NOT GD RIGHT_PAREN
   89   | LEFT_PAREN . IMPLY GD GD RIGHT_PAREN
   90   | LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   91   | LEFT_PAREN . EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   92   | LEFT_PAREN . UNKNOWN GD_star_or RIGHT_PAREN
   93   | LEFT_PAREN . ONEOF GD_star_or RIGHT_PAREN
   99 literal: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    PREFERENCE   shift, and go to state 105
    AND          shift, and go to state 106
    OR           shift, and go to state 107
    NOT          shift, and go to state 108
    IMPLY        shift, and go to state 109
    EXISTS       shift, and go to state 110
    FORALL       shift, and go to state 111
    UNKNOWN      shift, and go to state 112
    ONEOF        shift, and go to state 113
    NAME         shift, and go to state 7
    EQUAL        shift, and go to state 58
    RIGHT_PAREN  shift, and go to state 114

    predicate  go to state 96
    name       go to state 60


State 82

   45 pre_GD: pref_GD .

    $default  reduce using rule 45 (pre_GD)


State 83

   26 precondition_def: PRECONDITION pre_GD .

    $default  reduce using rule 26 (precondition_def)


State 84

   44 pref_GD: GD .

    $default  reduce using rule 44 (pref_GD)


State 85

   85 GD: literal .

    $default  reduce using rule 85 (GD)


State 86

   84 GD: atomic_formula_term .
   98 literal: atomic_formula_term .

    EFFECT       reduce using rule 84 (GD)
    EFFECT       [reduce using rule 98 (literal)]
    LEFT_PAREN   reduce using rule 84 (GD)
    LEFT_PAREN   [reduce using rule 98 (literal)]
    RIGHT_PAREN  reduce using rule 84 (GD)
    RIGHT_PAREN  [reduce using rule 98 (literal)]
    $default     reduce using rule 84 (GD)


State 87

   27 effect_def: EFFECT LEFT_PAREN . RIGHT_PAREN
   30 effectlist: LEFT_PAREN . AND c_effect_star_and RIGHT_PAREN
   33 c_effect: LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN
   34         | LEFT_PAREN . WHEN GD cond_effect RIGHT_PAREN
   37 p_effect: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    WHEN         shift, and go to state 115
    AND          shift, and go to state 116
    NOT          shift, and go to state 117
    FORALL       shift, and go to state 118
    NAME         shift, and go to state 7
    EQUAL        shift, and go to state 58
    RIGHT_PAREN  shift, and go to state 119

    predicate  go to state 96
    name       go to state 60


State 88

   28 effect_def: EFFECT effectlist .

    $default  reduce using rule 28 (effect_def)


State 89

   29 effectlist: c_effect .

    $default  reduce using rule 29 (effectlist)


State 90

   35 c_effect: p_effect .

    $default  reduce using rule 35 (c_effect)


State 91

   36 p_effect: atomic_formula_term .

    $default  reduce using rule 36 (p_effect)


State 92

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN . typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 120
    variable             go to state 48


State 93

   20 action_def: LEFT_PAREN ACTION name action_def_body RIGHT_PAREN .

    $default  reduce using rule 20 (action_def)


State 94

   24 action_def_body: precondition_def effect_def .

    $default  reduce using rule 24 (action_def_body)


State 95

   99 literal: LEFT_PAREN NOT . atomic_formula_term RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 121

    atomic_formula_term  go to state 122


State 96

  100 atomic_formula_term: LEFT_PAREN predicate . term_star RIGHT_PAREN

    $default  reduce using rule 103 (term_star)

    term_star  go to state 123


State 97

   86 GD: LEFT_PAREN . AND GD_star_and RIGHT_PAREN
   87   | LEFT_PAREN . OR GD_star_or RIGHT_PAREN
   88   | LEFT_PAREN . NOT GD RIGHT_PAREN
   89   | LEFT_PAREN . IMPLY GD GD RIGHT_PAREN
   90   | LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   91   | LEFT_PAREN . EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   92   | LEFT_PAREN . UNKNOWN GD_star_or RIGHT_PAREN
   93   | LEFT_PAREN . ONEOF GD_star_or RIGHT_PAREN
   99 literal: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    AND      shift, and go to state 124
    OR       shift, and go to state 107
    NOT      shift, and go to state 108
    IMPLY    shift, and go to state 109
    EXISTS   shift, and go to state 110
    FORALL   shift, and go to state 125
    UNKNOWN  shift, and go to state 112
    ONEOF    shift, and go to state 113
    NAME     shift, and go to state 7
    EQUAL    shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 98

   42 derived_def: LEFT_PAREN DERIVED typed_list_variable literal GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 126


State 99

   57 typed_list_variable: variable MINUS type . typed_list_variable

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 127
    variable             go to state 48


State 100

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM . name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM . name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    NAME  shift, and go to state 7

    name  go to state 128


State 101

   67 typed_list_name: name MINUS name typed_list_name .

    $default  reduce using rule 67 (typed_list_name)


State 102

   59 type: LEFT_PAREN EITHER . primitive_type_plus RIGHT_PAREN

    NAME  shift, and go to state 7

    primitive_type_plus  go to state 129
    name                 go to state 130


State 103

   70 typed_list_object: name MINUS type typed_list_object .

    $default  reduce using rule 70 (typed_list_object)


State 104

   55 atomic_formula_skeleton: LEFT_PAREN predicate typed_list_variable RIGHT_PAREN .

    $default  reduce using rule 55 (atomic_formula_skeleton)


State 105

   43 pref_GD: LEFT_PAREN PREFERENCE . name GD RIGHT_PAREN

    NAME  shift, and go to state 7

    name  go to state 131


State 106

   46 pre_GD: LEFT_PAREN AND . pre_GD_star_and RIGHT_PAREN
   86 GD: LEFT_PAREN AND . GD_star_and RIGHT_PAREN

    LEFT_PAREN   reduce using rule 48 (pre_GD_star_and)
    LEFT_PAREN   [reduce using rule 96 (GD_star_and)]
    RIGHT_PAREN  reduce using rule 48 (pre_GD_star_and)
    RIGHT_PAREN  [reduce using rule 96 (GD_star_and)]
    $default     reduce using rule 48 (pre_GD_star_and)

    pre_GD_star_and  go to state 132
    GD_star_and      go to state 133


State 107

   87 GD: LEFT_PAREN OR . GD_star_or RIGHT_PAREN

    $default  reduce using rule 94 (GD_star_or)

    GD_star_or  go to state 134


State 108

   88 GD: LEFT_PAREN NOT . GD RIGHT_PAREN
   99 literal: LEFT_PAREN NOT . atomic_formula_term RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 135
    literal              go to state 85
    atomic_formula_term  go to state 136


State 109

   89 GD: LEFT_PAREN IMPLY . GD GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 137
    literal              go to state 85
    atomic_formula_term  go to state 86


State 110

   91 GD: LEFT_PAREN EXISTS . LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 138


State 111

   47 pre_GD: LEFT_PAREN FORALL . LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN
   90 GD: LEFT_PAREN FORALL . LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 139


State 112

   92 GD: LEFT_PAREN UNKNOWN . GD_star_or RIGHT_PAREN

    $default  reduce using rule 94 (GD_star_or)

    GD_star_or  go to state 140


State 113

   93 GD: LEFT_PAREN ONEOF . GD_star_or RIGHT_PAREN

    $default  reduce using rule 94 (GD_star_or)

    GD_star_or  go to state 141


State 114

   25 precondition_def: PRECONDITION LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 25 (precondition_def)


State 115

   34 c_effect: LEFT_PAREN WHEN . GD cond_effect RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 142
    literal              go to state 85
    atomic_formula_term  go to state 86


State 116

   30 effectlist: LEFT_PAREN AND . c_effect_star_and RIGHT_PAREN

    $default  reduce using rule 31 (c_effect_star_and)

    c_effect_star_and  go to state 143


State 117

   37 p_effect: LEFT_PAREN NOT . atomic_formula_term RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 121

    atomic_formula_term  go to state 144


State 118

   33 c_effect: LEFT_PAREN FORALL . LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 145


State 119

   27 effect_def: EFFECT LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 27 (effect_def)


State 120

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN typed_list_variable . RIGHT_PAREN action_def_body RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 146


State 121

  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    NAME   shift, and go to state 7
    EQUAL  shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 122

   99 literal: LEFT_PAREN NOT atomic_formula_term . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 147


State 123

  100 atomic_formula_term: LEFT_PAREN predicate term_star . RIGHT_PAREN
  104 term_star: term_star . term

    NAME         shift, and go to state 7
    VARIABLE     shift, and go to state 46
    RIGHT_PAREN  shift, and go to state 148

    term      go to state 149
    name      go to state 150
    variable  go to state 151


State 124

   86 GD: LEFT_PAREN AND . GD_star_and RIGHT_PAREN

    $default  reduce using rule 96 (GD_star_and)

    GD_star_and  go to state 133


State 125

   90 GD: LEFT_PAREN FORALL . LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 152


State 126

   42 derived_def: LEFT_PAREN DERIVED typed_list_variable literal GD RIGHT_PAREN .

    $default  reduce using rule 42 (derived_def)


State 127

   57 typed_list_variable: variable MINUS type typed_list_variable .

    $default  reduce using rule 57 (typed_list_variable)


State 128

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name . RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name . RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 153


State 129

   59 type: LEFT_PAREN EITHER primitive_type_plus . RIGHT_PAREN
   62 primitive_type_plus: primitive_type_plus . name

    NAME         shift, and go to state 7
    RIGHT_PAREN  shift, and go to state 154

    name  go to state 155


State 130

   61 primitive_type_plus: name .

    $default  reduce using rule 61 (primitive_type_plus)


State 131

   43 pref_GD: LEFT_PAREN PREFERENCE name . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 156
    literal              go to state 85
    atomic_formula_term  go to state 86


State 132

   46 pre_GD: LEFT_PAREN AND pre_GD_star_and . RIGHT_PAREN
   49 pre_GD_star_and: pre_GD_star_and . pre_GD

    LEFT_PAREN   shift, and go to state 157
    RIGHT_PAREN  shift, and go to state 158

    pref_GD              go to state 82
    pre_GD               go to state 159
    GD                   go to state 84
    literal              go to state 85
    atomic_formula_term  go to state 86


State 133

   86 GD: LEFT_PAREN AND GD_star_and . RIGHT_PAREN
   97 GD_star_and: GD_star_and . GD

    LEFT_PAREN   shift, and go to state 97
    RIGHT_PAREN  shift, and go to state 160

    GD                   go to state 161
    literal              go to state 85
    atomic_formula_term  go to state 86


State 134

   87 GD: LEFT_PAREN OR GD_star_or . RIGHT_PAREN
   95 GD_star_or: GD_star_or . GD

    LEFT_PAREN   shift, and go to state 97
    RIGHT_PAREN  shift, and go to state 162

    GD                   go to state 163
    literal              go to state 85
    atomic_formula_term  go to state 86


State 135

   88 GD: LEFT_PAREN NOT GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 164


State 136

   84 GD: atomic_formula_term .
   98 literal: atomic_formula_term .
   99        | LEFT_PAREN NOT atomic_formula_term . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 147

    RIGHT_PAREN  [reduce using rule 84 (GD)]
    RIGHT_PAREN  [reduce using rule 98 (literal)]


State 137

   89 GD: LEFT_PAREN IMPLY GD . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 165
    literal              go to state 85
    atomic_formula_term  go to state 86


State 138

   91 GD: LEFT_PAREN EXISTS LEFT_PAREN . typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 166
    variable             go to state 48


State 139

   47 pre_GD: LEFT_PAREN FORALL LEFT_PAREN . typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN
   90 GD: LEFT_PAREN FORALL LEFT_PAREN . typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 167
    variable             go to state 48


State 140

   92 GD: LEFT_PAREN UNKNOWN GD_star_or . RIGHT_PAREN
   95 GD_star_or: GD_star_or . GD

    LEFT_PAREN   shift, and go to state 97
    RIGHT_PAREN  shift, and go to state 168

    GD                   go to state 163
    literal              go to state 85
    atomic_formula_term  go to state 86


State 141

   93 GD: LEFT_PAREN ONEOF GD_star_or . RIGHT_PAREN
   95 GD_star_or: GD_star_or . GD

    LEFT_PAREN   shift, and go to state 97
    RIGHT_PAREN  shift, and go to state 169

    GD                   go to state 163
    literal              go to state 85
    atomic_formula_term  go to state 86


State 142

   34 c_effect: LEFT_PAREN WHEN GD . cond_effect RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 170

    p_effect             go to state 171
    cond_effect          go to state 172
    atomic_formula_term  go to state 91


State 143

   30 effectlist: LEFT_PAREN AND c_effect_star_and . RIGHT_PAREN
   32 c_effect_star_and: c_effect_star_and . c_effect

    LEFT_PAREN   shift, and go to state 173
    RIGHT_PAREN  shift, and go to state 174

    c_effect             go to state 175
    p_effect             go to state 90
    atomic_formula_term  go to state 91


State 144

   37 p_effect: LEFT_PAREN NOT atomic_formula_term . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 176


State 145

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN . typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 177
    variable             go to state 48


State 146

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN . action_def_body RIGHT_PAREN

    PRECONDITION  shift, and go to state 63
    EFFECT        shift, and go to state 64

    $default  reduce using rule 21 (action_def_body)

    action_def_body   go to state 178
    precondition_def  go to state 67
    effect_def        go to state 68


State 147

   99 literal: LEFT_PAREN NOT atomic_formula_term RIGHT_PAREN .

    $default  reduce using rule 99 (literal)


State 148

  100 atomic_formula_term: LEFT_PAREN predicate term_star RIGHT_PAREN .

    $default  reduce using rule 100 (atomic_formula_term)


State 149

  104 term_star: term_star term .

    $default  reduce using rule 104 (term_star)


State 150

  105 term: name .

    $default  reduce using rule 105 (term)


State 151

  106 term: variable .

    $default  reduce using rule 106 (term)


State 152

   90 GD: LEFT_PAREN FORALL LEFT_PAREN . typed_list_variable RIGHT_PAREN GD RIGHT_PAREN

    VARIABLE  shift, and go to state 46

    $default  reduce using rule 56 (typed_list_variable)

    typed_list_variable  go to state 179
    variable             go to state 48


State 153

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN . LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN . LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 180


State 154

   59 type: LEFT_PAREN EITHER primitive_type_plus RIGHT_PAREN .

    $default  reduce using rule 59 (type)


State 155

   62 primitive_type_plus: primitive_type_plus name .

    $default  reduce using rule 62 (primitive_type_plus)


State 156

   43 pref_GD: LEFT_PAREN PREFERENCE name GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 181


State 157

   43 pref_GD: LEFT_PAREN . PREFERENCE name GD RIGHT_PAREN
   46 pre_GD: LEFT_PAREN . AND pre_GD_star_and RIGHT_PAREN
   47       | LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN
   86 GD: LEFT_PAREN . AND GD_star_and RIGHT_PAREN
   87   | LEFT_PAREN . OR GD_star_or RIGHT_PAREN
   88   | LEFT_PAREN . NOT GD RIGHT_PAREN
   89   | LEFT_PAREN . IMPLY GD GD RIGHT_PAREN
   90   | LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   91   | LEFT_PAREN . EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN
   92   | LEFT_PAREN . UNKNOWN GD_star_or RIGHT_PAREN
   93   | LEFT_PAREN . ONEOF GD_star_or RIGHT_PAREN
   99 literal: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    PREFERENCE  shift, and go to state 105
    AND         shift, and go to state 106
    OR          shift, and go to state 107
    NOT         shift, and go to state 108
    IMPLY       shift, and go to state 109
    EXISTS      shift, and go to state 110
    FORALL      shift, and go to state 111
    UNKNOWN     shift, and go to state 112
    ONEOF       shift, and go to state 113
    NAME        shift, and go to state 7
    EQUAL       shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 158

   46 pre_GD: LEFT_PAREN AND pre_GD_star_and RIGHT_PAREN .

    $default  reduce using rule 46 (pre_GD)


State 159

   49 pre_GD_star_and: pre_GD_star_and pre_GD .

    $default  reduce using rule 49 (pre_GD_star_and)


State 160

   86 GD: LEFT_PAREN AND GD_star_and RIGHT_PAREN .

    $default  reduce using rule 86 (GD)


State 161

   97 GD_star_and: GD_star_and GD .

    $default  reduce using rule 97 (GD_star_and)


State 162

   87 GD: LEFT_PAREN OR GD_star_or RIGHT_PAREN .

    $default  reduce using rule 87 (GD)


State 163

   95 GD_star_or: GD_star_or GD .

    $default  reduce using rule 95 (GD_star_or)


State 164

   88 GD: LEFT_PAREN NOT GD RIGHT_PAREN .

    $default  reduce using rule 88 (GD)


State 165

   89 GD: LEFT_PAREN IMPLY GD GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 182


State 166

   91 GD: LEFT_PAREN EXISTS LEFT_PAREN typed_list_variable . RIGHT_PAREN GD RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 183


State 167

   47 pre_GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable . RIGHT_PAREN pre_GD RIGHT_PAREN
   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable . RIGHT_PAREN GD RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 184


State 168

   92 GD: LEFT_PAREN UNKNOWN GD_star_or RIGHT_PAREN .

    $default  reduce using rule 92 (GD)


State 169

   93 GD: LEFT_PAREN ONEOF GD_star_or RIGHT_PAREN .

    $default  reduce using rule 93 (GD)


State 170

   37 p_effect: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
   41 cond_effect: LEFT_PAREN . AND p_effect p_effect_star_and RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    AND    shift, and go to state 185
    NOT    shift, and go to state 117
    NAME   shift, and go to state 7
    EQUAL  shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 171

   40 cond_effect: p_effect .

    $default  reduce using rule 40 (cond_effect)


State 172

   34 c_effect: LEFT_PAREN WHEN GD cond_effect . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 186


State 173

   33 c_effect: LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN
   34         | LEFT_PAREN . WHEN GD cond_effect RIGHT_PAREN
   37 p_effect: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    WHEN    shift, and go to state 115
    NOT     shift, and go to state 117
    FORALL  shift, and go to state 118
    NAME    shift, and go to state 7
    EQUAL   shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 174

   30 effectlist: LEFT_PAREN AND c_effect_star_and RIGHT_PAREN .

    $default  reduce using rule 30 (effectlist)


State 175

   32 c_effect_star_and: c_effect_star_and c_effect .

    $default  reduce using rule 32 (c_effect_star_and)


State 176

   37 p_effect: LEFT_PAREN NOT atomic_formula_term RIGHT_PAREN .

    $default  reduce using rule 37 (p_effect)


State 177

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable . RIGHT_PAREN effectlist RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 187


State 178

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 188


State 179

   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable . RIGHT_PAREN GD RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 189


State 180

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN . pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN . pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN

    pDOMAIN  shift, and go to state 190


State 181

   43 pref_GD: LEFT_PAREN PREFERENCE name GD RIGHT_PAREN .

    $default  reduce using rule 43 (pref_GD)


State 182

   89 GD: LEFT_PAREN IMPLY GD GD RIGHT_PAREN .

    $default  reduce using rule 89 (GD)


State 183

   91 GD: LEFT_PAREN EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 191
    literal              go to state 85
    atomic_formula_term  go to state 86


State 184

   47 pre_GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN . pre_GD RIGHT_PAREN
   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 157

    pref_GD              go to state 82
    pre_GD               go to state 192
    GD                   go to state 193
    literal              go to state 85
    atomic_formula_term  go to state 86


State 185

   41 cond_effect: LEFT_PAREN AND . p_effect p_effect_star_and RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 194

    p_effect             go to state 195
    atomic_formula_term  go to state 91


State 186

   34 c_effect: LEFT_PAREN WHEN GD cond_effect RIGHT_PAREN .

    $default  reduce using rule 34 (c_effect)


State 187

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN . effectlist RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 196

    effectlist           go to state 197
    c_effect             go to state 89
    p_effect             go to state 90
    atomic_formula_term  go to state 91


State 188

   19 action_def: LEFT_PAREN ACTION name PARAMETERS LEFT_PAREN typed_list_variable RIGHT_PAREN action_def_body RIGHT_PAREN .

    $default  reduce using rule 19 (action_def)


State 189

   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN . GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97

    GD                   go to state 198
    literal              go to state 85
    atomic_formula_term  go to state 86


State 190

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN . name RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN . name RIGHT_PAREN init goal RIGHT_PAREN

    NAME  shift, and go to state 7

    name  go to state 199


State 191

   91 GD: LEFT_PAREN EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 200


State 192

   47 pre_GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 201


State 193

   44 pref_GD: GD .
   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 202

    RIGHT_PAREN  [reduce using rule 44 (pref_GD)]


State 194

   37 p_effect: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    NOT    shift, and go to state 117
    NAME   shift, and go to state 7
    EQUAL  shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 195

   41 cond_effect: LEFT_PAREN AND p_effect . p_effect_star_and RIGHT_PAREN

    $default  reduce using rule 38 (p_effect_star_and)

    p_effect_star_and  go to state 203


State 196

   30 effectlist: LEFT_PAREN . AND c_effect_star_and RIGHT_PAREN
   33 c_effect: LEFT_PAREN . FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN
   34         | LEFT_PAREN . WHEN GD cond_effect RIGHT_PAREN
   37 p_effect: LEFT_PAREN . NOT atomic_formula_term RIGHT_PAREN
  100 atomic_formula_term: LEFT_PAREN . predicate term_star RIGHT_PAREN

    WHEN    shift, and go to state 115
    AND     shift, and go to state 116
    NOT     shift, and go to state 117
    FORALL  shift, and go to state 118
    NAME    shift, and go to state 7
    EQUAL   shift, and go to state 58

    predicate  go to state 96
    name       go to state 60


State 197

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 204


State 198

   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 202


State 199

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name . RIGHT_PAREN problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name . RIGHT_PAREN init goal RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 205


State 200

   91 GD: LEFT_PAREN EXISTS LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN .

    $default  reduce using rule 91 (GD)


State 201

   47 pre_GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN pre_GD RIGHT_PAREN .

    $default  reduce using rule 47 (pre_GD)


State 202

   90 GD: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN GD RIGHT_PAREN .

    $default  reduce using rule 90 (GD)


State 203

   39 p_effect_star_and: p_effect_star_and . p_effect
   41 cond_effect: LEFT_PAREN AND p_effect p_effect_star_and . RIGHT_PAREN

    LEFT_PAREN   shift, and go to state 194
    RIGHT_PAREN  shift, and go to state 206

    p_effect             go to state 207
    atomic_formula_term  go to state 91


State 204

   33 c_effect: LEFT_PAREN FORALL LEFT_PAREN typed_list_variable RIGHT_PAREN effectlist RIGHT_PAREN .

    $default  reduce using rule 33 (c_effect)


State 205

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN . problem_option init goal RIGHT_PAREN
   10         | LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN . init goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 208

    problem_option  go to state 209
    object_dec      go to state 210
    init            go to state 211
    require_def     go to state 212


State 206

   41 cond_effect: LEFT_PAREN AND p_effect p_effect_star_and RIGHT_PAREN .

    $default  reduce using rule 41 (cond_effect)


State 207

   39 p_effect_star_and: p_effect_star_and p_effect .

    $default  reduce using rule 39 (p_effect_star_and)


State 208

   14 object_dec: LEFT_PAREN . OBJECT typed_list_object RIGHT_PAREN
   15 init: LEFT_PAREN . INIT init_list RIGHT_PAREN
   72 require_def: LEFT_PAREN . REQUIREMENTS require_key_plus RIGHT_PAREN

    REQUIREMENTS  shift, and go to state 19
    INIT          shift, and go to state 213
    OBJECT        shift, and go to state 214


State 209

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option . init goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 215

    init  go to state 216


State 210

   12 problem_option: object_dec .

    $default  reduce using rule 12 (problem_option)


State 211

   10 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init . goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 217

    goal  go to state 218


State 212

   11 problem_option: require_def .
   13               | require_def . object_dec

    LEFT_PAREN  shift, and go to state 219

    LEFT_PAREN  [reduce using rule 11 (problem_option)]

    object_dec  go to state 220


State 213

   15 init: LEFT_PAREN INIT . init_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 221

    init_list  go to state 222


State 214

   14 object_dec: LEFT_PAREN OBJECT . typed_list_object RIGHT_PAREN

    NAME  shift, and go to state 7

    $default  reduce using rule 69 (typed_list_object)

    typed_list_object  go to state 223
    name               go to state 41


State 215

   15 init: LEFT_PAREN . INIT init_list RIGHT_PAREN

    INIT  shift, and go to state 213


State 216

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init . goal RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 217

    goal  go to state 224


State 217

   16 goal: LEFT_PAREN . GOAL pre_GD RIGHT_PAREN

    GOAL  shift, and go to state 225


State 218

   10 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 226


State 219

   14 object_dec: LEFT_PAREN . OBJECT typed_list_object RIGHT_PAREN

    OBJECT  shift, and go to state 214


State 220

   13 problem_option: require_def object_dec .

    $default  reduce using rule 13 (problem_option)


State 221

   17 init_list: LEFT_PAREN . AND pre_GD_star_and RIGHT_PAREN
   18          | LEFT_PAREN . OR pre_GD_star_or RIGHT_PAREN

    AND  shift, and go to state 227
    OR   shift, and go to state 228


State 222

   15 init: LEFT_PAREN INIT init_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 229


State 223

   14 object_dec: LEFT_PAREN OBJECT typed_list_object . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 230


State 224

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 231


State 225

   16 goal: LEFT_PAREN GOAL . pre_GD RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 157

    pref_GD              go to state 82
    pre_GD               go to state 232
    GD                   go to state 84
    literal              go to state 85
    atomic_formula_term  go to state 86


State 226

   10 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN init goal RIGHT_PAREN .

    $default  reduce using rule 10 (pproblem)


State 227

   17 init_list: LEFT_PAREN AND . pre_GD_star_and RIGHT_PAREN

    $default  reduce using rule 48 (pre_GD_star_and)

    pre_GD_star_and  go to state 233


State 228

   18 init_list: LEFT_PAREN OR . pre_GD_star_or RIGHT_PAREN

    $default  reduce using rule 50 (pre_GD_star_or)

    pre_GD_star_or  go to state 234


State 229

   15 init: LEFT_PAREN INIT init_list RIGHT_PAREN .

    $default  reduce using rule 15 (init)


State 230

   14 object_dec: LEFT_PAREN OBJECT typed_list_object RIGHT_PAREN .

    $default  reduce using rule 14 (object_dec)


State 231

    9 pproblem: LEFT_PAREN DEFINE LEFT_PAREN PROBLEM name RIGHT_PAREN LEFT_PAREN pDOMAIN name RIGHT_PAREN problem_option init goal RIGHT_PAREN .

    $default  reduce using rule 9 (pproblem)


State 232

   16 goal: LEFT_PAREN GOAL pre_GD . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 235


State 233

   17 init_list: LEFT_PAREN AND pre_GD_star_and . RIGHT_PAREN
   49 pre_GD_star_and: pre_GD_star_and . pre_GD

    LEFT_PAREN   shift, and go to state 157
    RIGHT_PAREN  shift, and go to state 236

    pref_GD              go to state 82
    pre_GD               go to state 159
    GD                   go to state 84
    literal              go to state 85
    atomic_formula_term  go to state 86


State 234

   18 init_list: LEFT_PAREN OR pre_GD_star_or . RIGHT_PAREN
   51 pre_GD_star_or: pre_GD_star_or . pre_GD

    LEFT_PAREN   shift, and go to state 157
    RIGHT_PAREN  shift, and go to state 237

    pref_GD              go to state 82
    pre_GD               go to state 238
    GD                   go to state 84
    literal              go to state 85
    atomic_formula_term  go to state 86


State 235

   16 goal: LEFT_PAREN GOAL pre_GD RIGHT_PAREN .

    $default  reduce using rule 16 (goal)


State 236

   17 init_list: LEFT_PAREN AND pre_GD_star_and RIGHT_PAREN .

    $default  reduce using rule 17 (init_list)


State 237

   18 init_list: LEFT_PAREN OR pre_GD_star_or RIGHT_PAREN .

    $default  reduce using rule 18 (init_list)


State 238

   51 pre_GD_star_or: pre_GD_star_or pre_GD .

    $default  reduce using rule 51 (pre_GD_star_or)
